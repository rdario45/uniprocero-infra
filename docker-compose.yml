version: '3.1'

services: 
  webserver: 
    image: nginx:latest
    container_name: nginx-pdn
  depends_on:
      - eventos
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ../frontend/build:/usr/share/nginx/html
    ports:
      - 80:80
      - 443:443
    hostname: webserver
  eventos:
    image: openjdk:8
    container_name: "eventos-pdn"
    depends_on:
      - database
    volumes:
      - ../backend/eventos-1.0:/opt/eventos
      - ../backend/logs:/opt/eventos/logs  
     ports:
      - 9001:9001  
    environment:
      TZ: "America/Bogota"
      LANG: "C.UTF-8"
    hostname: eventos
    restart: always
    command: "./opt/eventos/bin/eventos"
  database:
    image: postgres
    restart: always
    container_name: "postgresql-pdn"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: "123"
      POSTGRES_DB: dev
    hostname: webserver
    volumes:
      - postgresql-db:/var/lib/postgresql/data
    ports:
      - 5432:5432
#    networks:
#      - webnet
#  backend:
#    container_name: "backend-prod"
#    build:
#      context: /home/ruben/workspace/uniandes/proyecto0/backend
#      dockerfile: Dockerfile
#    ports:
#      - 9001:9001
#    networks:
#      - webnet
#  npm-build:
#    container_name: npm-build
#    build:
#      context: /home/ruben/workspace/uniandes/proyecto0/frontend
#      dockerfile: Dockerfile
#    volumes:
#      - /home/ruben/workspace/uniandes/proyecto0/frontend:/app
#      - /app/node_modules
#networks:
#  webnet:
volumes:
  postgresql-db:
networks:
  default:
    external:
      name: tecnico_default

